@using Microsoft.Extensions.Localization
@inject IStringLocalizer<Resource> localizer
@model BaSalesManagementApp.MVC.Models.CustomerVMs.CustomerUpdateVM

@{
    ViewData["Title"] = localizer["Update"];
}

<link href="~/assets/flags/flags.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.min.css" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />

<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />

<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">
        <h4 class="py-3 mb-4">
            <span class="text-muted fw-light">@Html.Raw(localizer["Customer"]) /</span> @Html.Raw(localizer["Update"])
        </h4>
        <div class="row">

            <div class="col-md-6 col-lg-6">
                <!-- Formun genişliğine göre ayarlanması -->
                <div class="card mb-4">
                    <div class="card-body">
                        <form asp-action="Update">
                            <input type="hidden" asp-for="Id" class="form-control" />
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <div class="mb-3">
                                <label asp-for="Name" class="form-label">@Html.Raw(localizer["CustomerName"]).ToString().ToUpper(new System.Globalization.CultureInfo(System.Threading.Thread.CurrentThread.CurrentCulture.Name))</label>
                                <input asp-for="Name" class="form-control" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="CountryId" class="form-label">@Html.Raw(localizer["Country"])</label>
                                <select asp-for="CountryId" class="form-control" id="CountryId" style="width: 100%;">
                                    @if (Model != null && Model.Countries != null && Model.Countries.Any())

                                    {
                                        <option value="">@Html.Raw(localizer["SelectCountry"])</option>
                                        foreach (var country in Model.Countries)

                                        {
                                            <option value="@country.Id">@country.Name</option>
                                        }

                                    }

                                    else

                                    {
                                        <option value="" disabled selected>@Html.Raw(localizer["NoCountryFound"])</option>
                                    }
                                </select>
                                <span asp-validation-for="CountryId" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="CityId" class="form-label">@Html.Raw(localizer["City"])</label>
                                <select asp-for="CityId" class="form-control" id="CityId" style="width: 100%;">
                                    @if (Model != null && Model.Cities != null && Model.Cities.Any())

                                    {
                                        <option value="">@Html.Raw(localizer["SelectCity"])</option>
                                        foreach (var city in Model.Cities)

                                        {
                                            <option value="@city.Id">@city.Name</option>
                                        }

                                    }

                                    else

                                    {
                                        <option value="" disabled selected>@Html.Raw(localizer["NoCityFound"])</option>
                                    }
                                </select>
                                <span asp-validation-for="CityId" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Address" class="form-label">@Html.Raw(localizer["Address"])</label>
                                <input asp-for="Address" class="form-control" />
                                <span asp-validation-for="Address" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Phone" class="form-label">@Html.Raw(localizer["Phone"])</label>
                                <br />
                                <input asp-for="Phone" type="tel" class="form-control" id="phoneInput" value="@Model.Phone" />
                                <span asp-validation-for="Phone" class="text-danger"></span>
                                <input type="hidden" id="fullPhoneNumber" name="fullPhoneNumber" />
                                <input type="hidden" id="selectedCountryIso2" name="selectedCountryIso2" />
                            </div>

                            <div class="mb-3">
                                <label asp-for="CompanyId" class="form-label">@Html.Raw(localizer["Company"])</label>
                                <select asp-for="CompanyId" class="form-control">
                                    @if (Model.Companies != null)

                                    {

                                        foreach (var company in Model.Companies)

                                        {
                                            <option value="@company.Id">@company.Name</option>
                                        }

                                    }

                                    else

                                    {
                                        <option value="" disabled selected>@Html.Raw(localizer["NoCompanyFound"])</option>
                                    }
                                </select>
                                <span asp-validation-for="CompanyId" class="text-danger"></span>
                            </div>

                            <p>Phone:@Model.Phone</p>
                            <div>
                                <input type="submit" value="@Html.Raw(localizer["Update"])" class="btn btn-primary" />
                                <a asp-action="Index" class="btn btn-secondary">@Html.Raw(localizer["BackToList"])</a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<!-- Toastr JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<!-- intl-tel-input JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

<script>
    $(document).ready(function () {
        var phoneInput = $('#phoneInput');
        var iti = intlTelInput(phoneInput[0], {
            separateDialCode: true,
            initialCountry: 'auto',
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"
        });

        // Toastr ayarları: Sağ alt köşede göster
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-bottom-right",  // Sağ alt köşe
            "preventDuplicates": true,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };

        var initialPhoneNumber = '@Model.Phone'; // Modeldeki kayıtlı telefon numarasını al
        var selectedCountryName = $('#CountryId').find('option:selected').text(); // Seçilen ülke adını al

        if (initialPhoneNumber) {
            $.getJSON('/data/Countries.json', function (data) {
                var countryPhoneData = data.CountryCodes;
                var selectedCountryPhoneCode = null;

                $.each(countryPhoneData, function (index, country) {
                    if (country.name === selectedCountryName || country.turkish_name === selectedCountryName) {
                        selectedCountryPhoneCode = country.dialcode;
                        return false; // Döngüyü durdur
                    }
                });

                if (selectedCountryPhoneCode) {
                    var fullPhoneNumber = selectedCountryPhoneCode + initialPhoneNumber;
                    iti.setNumber(fullPhoneNumber); // Kayıtlı telefon numarasını inputa yerleştir
                } else {
                    toastr.error('Telefon kodu bulunamadı', 'Hata');
                }
            });
        } else {
            var countryPhoneData;
            $.getJSON('/data/Countries.json', function (data) {
                countryPhoneData = data.CountryCodes;
                var selectedCountryName = $('#CountryId').find('option:selected').text();
                applyCountryPhoneCode(selectedCountryName);
            });

            $('#CountryId').change(function () {
                var selectedCountryName = $(this).find('option:selected').text();
                applyCountryPhoneCode(selectedCountryName);
            });

            function applyCountryPhoneCode(countryName) {
                var selectedCountryPhoneCode = null;
                $.each(countryPhoneData, function (index, country) {
                    if (country.name === countryName || country.turkish_name === countryName) {
                        selectedCountryPhoneCode = country.dialcode;
                        return false; // Döngüyü durdur
                    }
                });

                if (selectedCountryPhoneCode) {
                    iti.setNumber(selectedCountryPhoneCode); // intl-tel-input'u güncelle
                } else {
                    toastr.error('Telefon kodu bulunamadı', 'Hata');
                }
            }
        }

        $('#CityId').select2();
        $('#CountryId').select2();


        // Şehirleri yükle fonksiyonu
        function loadCities(countryId, selectedCityId = null) {
            if (countryId) {
                $.ajax({
                    url: '@Url.Action("GetCitiesByCountryId", "Customer")',
                    type: 'GET',
                    data: { countryId: countryId },
                    success: function (data) {
                        var citySelect = $('#CityId');
                        citySelect.empty(); // Mevcut şehir listesini temizle
                        citySelect.append('<option value="">@localizer["SelectCity"]</option>');

                        $.each(data, function (index, city) {
                            var isSelected = selectedCityId && selectedCityId === city.id ? 'selected' : '';
                            citySelect.append('<option value="' + city.id + '" ' + isSelected + '>' + city.name + '</option>');
                        });
                    },
                    error: function () {
                        toastr.error('@localizer["Error fetching cities."]', 'Hata');
                    }
                });
            } else {
                $('#CityId').empty().append('<option value="">@localizer["SelectCity"]</option>');
            }
        }

        // Sayfa yüklendiğinde müşteri için seçili şehirleri yükle
        var customerCountryId = '@Model.CountryId';
        var customerCityId = '@Model.CityId';

        if (customerCountryId) {
            loadCities(customerCountryId, customerCityId);
        }

        // Ülke seçildiğinde şehirleri yeniden yükle
        $('#CountryId').change(function () {
            var selectedCountryId = $(this).val();
            loadCities(selectedCountryId);
        });
   
    });



</script>