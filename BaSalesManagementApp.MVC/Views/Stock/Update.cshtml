@model BaSalesManagementApp.MVC.Models.StockVMs.StockUpdateVM

 @using Microsoft.Extensions.Localization
@inject IStringLocalizer<Resource> localizer

@{
	ViewData["Title"] = localizer["Update"];
}

<div class="content-wrapper">
	<div class="container-xxl flex-grow-1 container-p-y">
		<h4 class="py-3 mb-4">
			<span class="text-muted fw-light">@localizer["Stock"] /</span>
			@localizer["Update"]
		</h4>
		<div class="row">
			
				<div class="col-md-6">
					<div class="card mb-4">
						<div class="card-body">
							<form asp-action="Update">
								<input hidden asp-for="Id" class="form-control" />
								<div asp-validation-summary="ModelOnly" class="text-danger"></div>
								<div class="mb-3">
									<label asp-for="ProductId" class="form-label">@localizer["Product_Name"]</label>
								<select asp-for="ProductId" class="form-control" id="productSelect" style="width: 100%;"><!-- Genişlik ayarı -->>
										<option value="">@localizer["Product_Name"]</option>
										@foreach (var product in Model.Products)
										{
											<option value="@product.Id">@product.Name</option>
										}
									</select>
									<span asp-validation-for="ProductId" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="Count" class="control-label">@localizer["Count"]</label>
									<input asp-for="Count" class="form-control" />
									<span asp-validation-for="Count" class="text-danger"></span>
								</div>
								<div>
									<input type="submit" value="@localizer["Update"]" class="btn btn-primary" />
									<a asp-action="Index" class="btn btn-secondary">@localizer["BackToList"]</a>
								</div>
							</form>
						</div>
					</div>
				</div>
			
		</div>
	</div>
</div>

@section Scripts {

	<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

	<script>
		$(document).ready(function () {
			// Product Select2
			$('#productSelect').select2({
				placeholder: "@localizer["Product_Name"]",
				allowClear: true,
				width: 'resolve', // width: 'resolve' ekleyerek genişlik sorununu çözdük.
				language: {
					noResults: function () {
						return '@Html.Raw(localizer["No matching results"])';
					}
				},
				matcher: function (params, data) {
					// Arama terimi yoksa, mevcut seçenekleri göster
					if ($.trim(params.term) === '') {
						return data;
					}

					// Veri boşsa, eşleşme yok demektir
					if (typeof data.text === 'undefined') {
						return null;
					}

					// Arama terimini küçük harflere çevir ve baştan eşleşme kontrolü yap
					var searchTerm = params.term.toLowerCase();
					var optionText = data.text.toLowerCase();

					// Eğer seçenek, arama terimiyle başlıyorsa, sonucu döndür
					if (optionText.indexOf(searchTerm) === 0) {
						return data;
					}

					// Aksi takdirde eşleşme yok
					return null;
				},
				sorter: function (data) {
					// Alfabetik sıralama
					return data.sort(function (a, b) {
						return a.text.localeCompare(b.text);
					});
				}
			});
		});


	</script>

	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />

